import { MidCore } from './mid-core';
import { LoginInfo, AuthFlow, MidAuthnContext, MidOIDCConfig, UserInfo } from '../types';
export declare const STATE: {
    START: string;
    LOGIN_REDIRECT: string;
    REDIRECT_LANDING: string;
    LOGIN: string;
    REFRESHING: string;
    LOGOUT: string;
    FAIL: string;
};
/**
 * Private implementation for McKinsey ID OIDC Flow
 */
export declare class MidOIDCCore extends MidCore {
    loginInfo: LoginInfo;
    authFlow: AuthFlow;
    /**
     * Create a new MidCore instance
     *
     * @param config - the Mid configuration
     */
    constructor(config: MidOIDCConfig);
    onLoginResolve(): void;
    onLoginFailure(err: Error): Promise<void>;
    isAuthed(): Promise<boolean>;
    login(): Promise<MidAuthnContext>;
    refresh(): Promise<void>;
    logout(): Promise<void>;
    getUserInfo(): Promise<UserInfo | null>;
    /**
     * Handle the redirectUri landing
     */
    redirectLanding(): Promise<void>;
    /**
     * Redirects to the OIDC /authorize endpoint
     */
    redirectLogin(): Promise<void>;
}
