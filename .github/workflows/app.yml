name: cloud-native app

on:
  push:
    branches: [main]
  workflow_dispatch:
  pull_request:
    branches: [main]

env:
  TAG: 3.20.2-SNAPSHOT

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Karavan
        uses: actions/checkout@v3
        with:
          path: karavan

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/camel/karavan
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Generate Karavan UI model and API, Kamelets and Components
        working-directory: ./karavan
        run: |
          mvn clean compile exec:java -f karavan-generator \
          -Dexec.mainClass="org.apache.camel.karavan.generator.KaravanGenerator"

      #  Building Karavan Core
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Karavan Core install
        working-directory: ./karavan/karavan-core
        run: npm ci

      #  Build Karavan cloud app with public access
      - name: Build application public
        working-directory: ./karavan
        run: |
          mvn package -f karavan-app -Dquarkus.profile=public -DskipTest \
          -Dquarkus.quinoa.package-manager-install=true \
          -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.push=true \
          -Dquarkus.container-image.image=durgapmenon/karavan-app:custom \
          -Dquarkus.container-image.username=durgapmenon \
          -Dquarkus.container-image.password="&Sreevalsam95"
        # if: ${{ github.ref == 'refs/heads/main' }}

      #  Build Karavan cloud app with basic authorization
      # - name: Build application basic auth
      #   working-directory: ./karavan
      #   run: |
      #     mvn package -f karavan-app -Dquarkus.profile=basic -DskipTest \
      #     -Dquarkus.quinoa.package-manager-install=true \
      #     -Dquarkus.container-image.build=true \
      #     -Dquarkus.container-image.push=true \
      #     -Dquarkus.container-image.image=durgapmenon/karavan-app:custom \
      #     -Dquarkus.container-image.username=durgapmenon \
      #     -Dquarkus.container-image.password="&Sreevalsam95"
      #   # if: ${{ github.ref == 'refs/heads/main' }}

      #  Build Karavan cloud app with oidc authorization
  #     - name: Build application oidc
  #       working-directory: ./karavan
  #       run: |
  #         mvn package -f karavan-app -Dquarkus.profile=oidc -DskipTest \
  #         -Dquarkus.quinoa.package-manager-install=true \
  #         -Dquarkus.container-image.build=true \
  #         -Dquarkus.container-image.push=true \
  #         -Dquarkus.container-image.image=durgapmenon/karavan-app:custom \
  #         -Dquarkus.container-image.username=durgapmenon \
  #         -Dquarkus.container-image.password="&Sreevalsam95"
  # #       # if: ${{ github.ref == 'refs/heads/main' }}
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Karavan
        uses: actions/checkout@v3
        with:
          path: karavan

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3

      - name: make changes to eks cluster
        run: |
          export AWS_ACCESS_KEY_ID="ASIAWQVX7IBNFF6VETVO"
          export AWS_SECRET_ACCESS_KEY="zAC1aeaJowQx4sEA8ymVWE1SJg9Kw3u6dxfRq4AZ"
          export AWS_SESSION_TOKEN="FwoGZXIvYXdzELP//////////wEaDAij7gcuQmgtFUPRaCKPAzd2esBn7QrZIlcDRiFL8gnnLVC6swW0VMjiqATydrnFN/qDOlmFVUPN9jWJivbWYZO7VRBd9Cv803z4Eiyj0aYB6Xy5LfAR1HAMPHoLV8kvvp7C1guierF+y1WSsCAjC0zIEPajxaKcbEpqo8V+DHktNv5GO4ykUslUf8nSi98e01fpQyDaEGRINlvfLn8+C4PEallm9mxNsOP2UuEVI7HLhE0YSrl2E6CuFGUHdWa+7aMetxDecq5MUklezeIcKhhUYBoe+9YcEgfo0wK++0tz/3JfDyed5CaR9eVE+flOCxY5w5H5GY5fkuwvJ3RoBFaPW+w6q/U2t2XR3eO4bg6ZAV+TB8GNapZyZ23PDMNtuOtg7N85jLWto7gqeEe3Zat6A2AYqCZOO+HjttDLSB5xod1Sox9zP7JeTjsYSndFgtRGi9/BcnT+rcl2a/FXyG7fj1imFdqUGLTZSznszAePk35Cu9A0eozEA+WA8SMDsPIfQJ6NKQErL8FHaWA/9fSMAPw7HyJTU5aGnLAUGSjhtLCjBjInVxA5I6L9ZRbFkrt/o5oyRlOQ6JnbzKuu1KIwq6BT23fnFUNGnJEI"

          aws eks --region us-east-1 update-kubeconfig --name karavan-kubernetes-cluster

          cd karavan/karavan-cloud

          kubectl config set-context --current --namespace=karavan

          kubectl apply --filename \
          https://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml
          kubectl apply --filename \
          https://storage.googleapis.com/tekton-releases/triggers/latest/interceptors.yaml

          # kubectl delete -k AWS --namespace karavan
          kubectl delete --all pods --namespace=karavan

          kubectl apply -k AWS --namespace karavan
          kubectl apply -k quarkus-deployment --namespace karavan
          kubectl apply -k spring-deployment --namespace karavan
